{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/artist.js"],"names":["Container","styled","div","Content","Layout","children","data","useStaticQuery","siteTitle","site","siteMetadata","title","Item","Image","img","Releases","ul","Release","li","Title","h2","Description","section","Links","pageContext","description","image","links","releases","src","alt","map","link","index","text","url","key","href","target","rel","length","release"],"mappings":"4FAAA,qFAiBMA,EAAYC,IAAOC,IAAV,wEAAGD,CAAH,0DAKTE,EAAUF,IAAOC,IAAV,sEAAGD,CAAH,oGAuCEG,IA1BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAOC,yBAAe,cAU5B,OACE,kBAACP,EAAD,KACE,kBAAC,IAAD,CAAQQ,UAAWF,EAAKG,KAAKC,aAAaC,QAC1C,kBAACR,EAAD,KACE,8BAAOE,IAET,kBAAC,IAAD,S,kCCpDN,oEAKMO,EAAOX,IAAOC,IAAV,+DAAGD,CAAH,uBAGJY,EAAQZ,IAAOa,IAAV,gEAAGb,CAAH,qDAMLE,EAAUF,IAAOC,IAAV,kEAAGD,CAAH,wDAMPc,EAAWd,IAAOe,GAAV,mEAAGf,CAAH,uGASRgB,EAAUhB,IAAOiB,GAAV,kEAAGjB,CAAH,sEASPkB,EAAQlB,IAAOmB,GAAV,gEAAGnB,CAAH,MACLoB,EAAcpB,IAAOqB,QAAV,sEAAGrB,CAAH,MACXsB,EAAQtB,IAAOqB,QAAV,gEAAGrB,CAAH,MAEI,sBAAsB,IAAD,IAAlBuB,YACmDlB,KAA3DK,EAD0B,EAC1BA,MAAOc,EADmB,EACnBA,YAAaC,EADM,EACNA,MAAOC,EADD,EACCA,MAAOC,EADR,EACQA,SAC1C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKjB,MAAOA,IACZ,kBAACC,EAAD,KACE,kBAACC,EAAD,CAAOgB,IAAKH,EAAOI,IAAI,oBACvB,kBAAC3B,EAAD,KACE,kBAACgB,EAAD,KAAQR,GACR,kBAACU,EAAD,KAAcI,GACbE,GACC,kBAACJ,EAAD,eACU,IACPI,EAAMI,KAAI,SAACC,EAAMC,GAAW,IACnBC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,IAEd,OACE,0BAAMC,IAAKH,GACT,uBAAGI,KAAMF,EAAKG,OAAO,SAASC,IAAI,uBAC/BL,GAEFD,EAAQN,EAAMa,OAAS,GAAK,0CAC5BP,IAAUN,EAAMa,OAAS,GAAK,gDAXvC,MAmBHZ,GACC,kBAACb,EAAD,KACGa,EAASG,KAAI,SAACU,EAASR,GACtB,OACE,kBAAChB,EAAD,CAASmB,IAAKH,GACZ,yBAAKJ,IAAKY,EAAQf,MAAOI,IAAI","file":"component---src-templates-artist-js-249b9c13de6162c2a6d2.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n`\nconst Content = styled.div`\n  flex: 1;\n  padding-left: 50px;\n  padding-right: 50px;\n  main {\n    max-width: 1024px;\n    margin: auto;\n  a {\n    color: black;\n  }\n}\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <Container>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <Content>\n        <main>{children}</main>\n      </Content>\n      <Footer />\n    </Container>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport styled from \"styled-components\"\n\nconst Item = styled.div`\n  text-align: right;\n`\nconst Image = styled.img`\n  width: 100%;\n  @media (min-width: 768px) {\n    width: 33%;\n  }\n`\nconst Content = styled.div`\n  width: 100%;\n  @media (min-width: 768px) {\n    width: 66.66%;\n  }\n`\nconst Releases = styled.ul`\n  list-style-type: none;\n  width: 100%;\n  @media (min-width: 768px) {\n    width: 66.66%;\n  }\n  padding: 0;\n  margin-top: 20px;\n`\nconst Release = styled.li`\n  display: inline-block;\n  width: 20%;\n  img {\n    width: 100%;\n  }\n  margin-left: 15px;\n`\n\nconst Title = styled.h2``\nconst Description = styled.section``\nconst Links = styled.section``\n\nexport default ({ pageContext }) => {\n  const { title, description, image, links, releases } = pageContext.data\n  return (\n    <Layout>\n      <SEO title={title} />\n      <Item>\n        <Image src={image} alt=\"cover of artist\"></Image>\n        <Content>\n          <Title>{title}</Title>\n          <Description>{description}</Description>\n          {links && (\n            <Links>\n              more on{\" \"}\n              {links.map((link, index) => {\n                const { text, url } = link\n\n                return (\n                  <span key={index}>\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {text}\n                    </a>\n                    {index < links.length - 2 && <>, </>}\n                    {index === links.length - 2 && <> or </>}\n                  </span>\n                )\n              })}\n              .\n            </Links>\n          )}\n        </Content>\n        {releases && (\n          <Releases>\n            {releases.map((release, index) => {\n              return (\n                <Release key={index}>\n                  <img src={release.image} alt=\"cover of release\"></img>\n                </Release>\n              )\n            })}\n          </Releases>\n        )}\n      </Item>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}